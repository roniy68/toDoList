(()=>{"use strict";var n={890:(n,t,e)=>{e.d(t,{Z:()=>s});var o=e(537),r=e.n(o),i=e(645),a=e.n(i)()(r());a.push([n.id,"html,\nbody {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n  height: 100vh;\n}\n\n.main {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100%;\n}\n\n.todo-list {\n  min-width: 300px;\n  width: 50%;\n  max-width: 1000px;\n  box-shadow: 10px 14px 14px -5px rgba(0, 0, 0, 0.3);\n}\n\n.todo-input {\n  display: flex;\n  padding: 14px;\n}\n\n.task-input {\n  /* stylelint-disable-next-line */\n  width: -webkit-fill-available;\n  height: 30px;\n  padding: 0 0 0 7px;\n  border: 1px solid #aaa;\n  margin: 0 14px 0 0;\n}\n\n.task-add-btn {\n  background-color: #555;\n  color: #fff;\n  border: none;\n  padding: 0 14px;\n  cursor: pointer;\n  outline: none;\n}\n\n.task-add-btn:hover {\n  background-color: #333;\n}\n\n.todo-list-title {\n  margin-top: 14px;\n  padding: 0 14px;\n}\n\n.todo-list-ul {\n  list-style: none;\n  padding: 0 14px;\n  margin: 0;\n}\n\n.todo-list-li {\n  display: flex;\n  padding: 7px 0;\n  border-bottom: 1px solid #aaa;\n}\n\n.todo-list-li:last-child {\n  border-bottom: none;\n  padding: 7px 0 0 0;\n}\n\n.todo-list-li-text {\n  /* stylelint-disable-next-line */\n  width: -webkit-fill-available;\n  padding: 0 7px;\n  background-color: #fff;\n  border: none;\n  color: black;\n}\n\n.todo-list-li-text:hover {\n  background-color: #eee;\n}\n\n.todo-list-li-text:focus {\n  background-color: #eee;\n}\n\n.todo-list-li-cross {\n  padding-right: 5px;\n  cursor: pointer;\n  text-decoration: none !important;\n}\n\n.todo-list-clear-btn {\n  width: 100%;\n  height: 40px;\n  margin: 14px 0 0 0;\n  border: none;\n  cursor: pointer;\n  background-color: #555;\n  color: #fff;\n  outline: none;\n}\n\n.todo-list-clear-btn:hover {\n  background-color: #333;\n}\n\n.completed {\n  text-decoration: line-through;\n}\n","",{version:3,sources:["webpack://./src/styles/style.css"],names:[],mappings:"AAAA;;EAEE,SAAS;EACT,UAAU;EACV,sBAAsB;EACtB,aAAa;AACf;;AAEA;EACE,aAAa;EACb,uBAAuB;EACvB,mBAAmB;EACnB,YAAY;AACd;;AAEA;EACE,gBAAgB;EAChB,UAAU;EACV,iBAAiB;EACjB,kDAAkD;AACpD;;AAEA;EACE,aAAa;EACb,aAAa;AACf;;AAEA;EACE,gCAAgC;EAChC,6BAA6B;EAC7B,YAAY;EACZ,kBAAkB;EAClB,sBAAsB;EACtB,kBAAkB;AACpB;;AAEA;EACE,sBAAsB;EACtB,WAAW;EACX,YAAY;EACZ,eAAe;EACf,eAAe;EACf,aAAa;AACf;;AAEA;EACE,sBAAsB;AACxB;;AAEA;EACE,gBAAgB;EAChB,eAAe;AACjB;;AAEA;EACE,gBAAgB;EAChB,eAAe;EACf,SAAS;AACX;;AAEA;EACE,aAAa;EACb,cAAc;EACd,6BAA6B;AAC/B;;AAEA;EACE,mBAAmB;EACnB,kBAAkB;AACpB;;AAEA;EACE,gCAAgC;EAChC,6BAA6B;EAC7B,cAAc;EACd,sBAAsB;EACtB,YAAY;EACZ,YAAY;AACd;;AAEA;EACE,sBAAsB;AACxB;;AAEA;EACE,sBAAsB;AACxB;;AAEA;EACE,kBAAkB;EAClB,eAAe;EACf,gCAAgC;AAClC;;AAEA;EACE,WAAW;EACX,YAAY;EACZ,kBAAkB;EAClB,YAAY;EACZ,eAAe;EACf,sBAAsB;EACtB,WAAW;EACX,aAAa;AACf;;AAEA;EACE,sBAAsB;AACxB;;AAEA;EACE,6BAA6B;AAC/B",sourcesContent:["html,\nbody {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n  height: 100vh;\n}\n\n.main {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100%;\n}\n\n.todo-list {\n  min-width: 300px;\n  width: 50%;\n  max-width: 1000px;\n  box-shadow: 10px 14px 14px -5px rgba(0, 0, 0, 0.3);\n}\n\n.todo-input {\n  display: flex;\n  padding: 14px;\n}\n\n.task-input {\n  /* stylelint-disable-next-line */\n  width: -webkit-fill-available;\n  height: 30px;\n  padding: 0 0 0 7px;\n  border: 1px solid #aaa;\n  margin: 0 14px 0 0;\n}\n\n.task-add-btn {\n  background-color: #555;\n  color: #fff;\n  border: none;\n  padding: 0 14px;\n  cursor: pointer;\n  outline: none;\n}\n\n.task-add-btn:hover {\n  background-color: #333;\n}\n\n.todo-list-title {\n  margin-top: 14px;\n  padding: 0 14px;\n}\n\n.todo-list-ul {\n  list-style: none;\n  padding: 0 14px;\n  margin: 0;\n}\n\n.todo-list-li {\n  display: flex;\n  padding: 7px 0;\n  border-bottom: 1px solid #aaa;\n}\n\n.todo-list-li:last-child {\n  border-bottom: none;\n  padding: 7px 0 0 0;\n}\n\n.todo-list-li-text {\n  /* stylelint-disable-next-line */\n  width: -webkit-fill-available;\n  padding: 0 7px;\n  background-color: #fff;\n  border: none;\n  color: black;\n}\n\n.todo-list-li-text:hover {\n  background-color: #eee;\n}\n\n.todo-list-li-text:focus {\n  background-color: #eee;\n}\n\n.todo-list-li-cross {\n  padding-right: 5px;\n  cursor: pointer;\n  text-decoration: none !important;\n}\n\n.todo-list-clear-btn {\n  width: 100%;\n  height: 40px;\n  margin: 14px 0 0 0;\n  border: none;\n  cursor: pointer;\n  background-color: #555;\n  color: #fff;\n  outline: none;\n}\n\n.todo-list-clear-btn:hover {\n  background-color: #333;\n}\n\n.completed {\n  text-decoration: line-through;\n}\n"],sourceRoot:""}]);const s=a},645:n=>{n.exports=function(n){var t=[];return t.toString=function(){return this.map((function(t){var e="",o=void 0!==t[5];return t[4]&&(e+="@supports (".concat(t[4],") {")),t[2]&&(e+="@media ".concat(t[2]," {")),o&&(e+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),e+=n(t),o&&(e+="}"),t[2]&&(e+="}"),t[4]&&(e+="}"),e})).join("")},t.i=function(n,e,o,r,i){"string"==typeof n&&(n=[[null,n,void 0]]);var a={};if(o)for(var s=0;s<this.length;s++){var l=this[s][0];null!=l&&(a[l]=!0)}for(var d=0;d<n.length;d++){var A=[].concat(n[d]);o&&a[A[0]]||(void 0!==i&&(void 0===A[5]||(A[1]="@layer".concat(A[5].length>0?" ".concat(A[5]):""," {").concat(A[1],"}")),A[5]=i),e&&(A[2]?(A[1]="@media ".concat(A[2]," {").concat(A[1],"}"),A[2]=e):A[2]=e),r&&(A[4]?(A[1]="@supports (".concat(A[4],") {").concat(A[1],"}"),A[4]=r):A[4]="".concat(r)),t.push(A))}},t}},537:n=>{n.exports=function(n){var t=n[1],e=n[3];if(!e)return t;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(e)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),i="/*# ".concat(r," */");return[t].concat([i]).join("\n")}return[t].join("\n")}},379:n=>{var t=[];function e(n){for(var e=-1,o=0;o<t.length;o++)if(t[o].identifier===n){e=o;break}return e}function o(n,o){for(var i={},a=[],s=0;s<n.length;s++){var l=n[s],d=o.base?l[0]+o.base:l[0],A=i[d]||0,c="".concat(d," ").concat(A);i[d]=A+1;var p=e(c),u={css:l[1],media:l[2],sourceMap:l[3],supports:l[4],layer:l[5]};if(-1!==p)t[p].references++,t[p].updater(u);else{var E=r(u,o);o.byIndex=s,t.splice(s,0,{identifier:c,updater:E,references:1})}a.push(c)}return a}function r(n,t){var e=t.domAPI(t);return e.update(n),function(t){if(t){if(t.css===n.css&&t.media===n.media&&t.sourceMap===n.sourceMap&&t.supports===n.supports&&t.layer===n.layer)return;e.update(n=t)}else e.remove()}}n.exports=function(n,r){var i=o(n=n||[],r=r||{});return function(n){n=n||[];for(var a=0;a<i.length;a++){var s=e(i[a]);t[s].references--}for(var l=o(n,r),d=0;d<i.length;d++){var A=e(i[d]);0===t[A].references&&(t[A].updater(),t.splice(A,1))}i=l}}},569:n=>{var t={};n.exports=function(n,e){var o=function(n){if(void 0===t[n]){var e=document.querySelector(n);if(window.HTMLIFrameElement&&e instanceof window.HTMLIFrameElement)try{e=e.contentDocument.head}catch(n){e=null}t[n]=e}return t[n]}(n);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(e)}},216:n=>{n.exports=function(n){var t=document.createElement("style");return n.setAttributes(t,n.attributes),n.insert(t,n.options),t}},565:(n,t,e)=>{n.exports=function(n){var t=e.nc;t&&n.setAttribute("nonce",t)}},795:n=>{n.exports=function(n){var t=n.insertStyleElement(n);return{update:function(e){!function(n,t,e){var o="";e.supports&&(o+="@supports (".concat(e.supports,") {")),e.media&&(o+="@media ".concat(e.media," {"));var r=void 0!==e.layer;r&&(o+="@layer".concat(e.layer.length>0?" ".concat(e.layer):""," {")),o+=e.css,r&&(o+="}"),e.media&&(o+="}"),e.supports&&(o+="}");var i=e.sourceMap;i&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),t.styleTagTransform(o,n,t.options)}(t,n,e)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(t)}}}},589:n=>{n.exports=function(n,t){if(t.styleSheet)t.styleSheet.cssText=n;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(n))}}}},t={};function e(o){var r=t[o];if(void 0!==r)return r.exports;var i=t[o]={id:o,exports:{}};return n[o](i,i.exports,e),i.exports}e.n=n=>{var t=n&&n.__esModule?()=>n.default:()=>n;return e.d(t,{a:t}),t},e.d=(n,t)=>{for(var o in t)e.o(t,o)&&!e.o(n,o)&&Object.defineProperty(n,o,{enumerable:!0,get:t[o]})},e.o=(n,t)=>Object.prototype.hasOwnProperty.call(n,t),e.nc=void 0,(()=>{const n=n=>{localStorage.setItem("toDoList",JSON.stringify(n))},t=()=>{let n;return n=JSON.parse(localStorage.getItem("toDoList"))||[],n},o=document.querySelector(".todo-list-ul"),r=(n,t)=>{n.push({task:t,completed:!1,id:n.length+1})},i=n=>{o.innerHTML="",t().forEach((n=>{const t=document.createElement("li");t.classList.add("todo-list-li");const e=document.createElement("input");e.classList.add("todo-list-li-checkbox"),e.type="checkbox",e.checked=n.completed,t.appendChild(e);const r=document.createElement("input");r.classList.add("todo-list-li-text"),r.value=n.task,r.disabled=!0,t.appendChild(r),n.completed&&r.classList.add("completed");const i=document.createElement("span");i.classList.add("todo-list-li-cross"),i.innerHTML="x",t.appendChild(i),o.appendChild(t)}))},a=t(),s=document.querySelector(".task-input"),l=document.querySelector(".todo-list-ul"),d=document.querySelector(".todo-list-clear-btn"),A=document.querySelector(".task-add-btn");s.addEventListener("keypress",(t=>{"Enter"===t.key&&""!==s.value&&(r(a,s.value),s.value="",n(a),i())})),A.addEventListener("click",(()=>{""!==s.value&&(r(a,s.value),s.value="",n(a),i())})),l.addEventListener("click",(t=>{t.target.closest(".todo-list-li-checkbox")&&((t,e)=>{const o=t.target.closest(".todo-list-li-checkbox").nextElementSibling,r=e.findIndex((n=>n.task===o.value));e[r].completed=!e[r].completed,n(e),i()})(t,a)})),d.addEventListener("click",(()=>{const t=((e=(e=a).filter((n=>!1===n.completed))).forEach(((n,t)=>{n.id=t+1})),e);var e;n(t),i()})),l.addEventListener("dblclick",(t=>{t.target.closest(".todo-list-li-text")&&((t,e)=>{const o=t.target.closest(".todo-list-li-text");o.disabled=!1,o.focus();const r=o.value;o.addEventListener("keypress",(t=>{if("Enter"===t.key&&""!==o.value){const t=e.findIndex((n=>n.task===r));e[t].task=o.value,o.disabled=!0,n(e),i()}}))})(t,a)})),l.addEventListener("click",(t=>{t.target.closest(".todo-list-li-cross")&&((t,e)=>{const o=t.target.closest(".todo-list-li-cross").previousElementSibling,r=e.findIndex((n=>n.task===o.value));e.splice(r,1),e.forEach(((n,t)=>{n.id=t+1})),n(e),i()})(t,a)}));var c=e(379),p=e.n(c),u=e(795),E=e.n(u),f=e(569),g=e.n(f),x=e(565),b=e.n(x),h=e(216),C=e.n(h),m=e(589),v=e.n(m),B=e(890),k={};k.styleTagTransform=v(),k.setAttributes=b(),k.insert=g().bind(null,"head"),k.domAPI=E(),k.insertStyleElement=C(),p()(B.Z,k),B.Z&&B.Z.locals&&B.Z.locals,i()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,